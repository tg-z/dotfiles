set hidden true
set shell sh
set shellopts '-eu'
set icons true
set drawbox true

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar -cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd mkdir ${{
  printf "directory name: "
  read ans
  mkdir -p $ans
}}

cmd mkfile ${{
  printf "file name: "
  read ans
  $EDITOR $ans
}}

cmd delete ${{
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && mv -f $fx ~/.Trash 
}}

cmd trash ${{
    mkdir -p ~/.local/share/trash/files
    if [ -z "$fs" ]; then
        mv "$f" ~/.local/share/trash/files
    else
        IFS="`printf '\n\t'`"; mv $fs ~/.local/share/trash/files
    fi
}}

cmd fzf_jump ${{
  res="$(find . -maxdepth 3 | fzf --reverse --header='jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}
cmd unpk ${{
        if [ -f $fx ]
        then
                case $1 in
                        (*.tar.bz2) open $fx -a Keka ;;
                        (*.tar.gz) open $fx -a Keka ;;
                        (*.bz2) open $fx -a Keka ;;
                        (*.rar) open $fx -a Keka ;;
                        (*.gz) gunzip $fx ;;
                        (*.tar) open $fx -a Keka ;;
                        (*.tbz2) open $fx -a Keka ;;
                        (*.tgz) open $fx -a Keka ;;
                        (*.zip) open $fx -a Keka ;;
                        (*.Z) open $fx -a Keka ;;
                        (*.7z) open $fx -a Keka ;;
                        (*) echo "I don't know how to unpack '$fx'..." ;;
                esac
        else
                echo "'$1' is not a valid file"
        fi
}}

cmd pview ${{
  case "$f" in 
    *.json) fx "$f" ;;
    *.csv) csvpreview "$f" ;;
    *.md) glow "$f" ;;
    *.png) mpv "$f" ;;
    *.jpg) mpv "$f" ;;
    *.jpeg) mpv "$f" ;;
    *.gif) mpv "$f" ;;
    *.html) w3m "$f" ;;
    *.css) vim "$f" ;;
    *.
}}

cmd cpy ${{
    echo -e "copied âœ“"
    for i
    do cat $i | pbcopy
    done;
}}

cmd chmod ${{
  for file in "$fx"
  do
    chmod +x $file
  done
}}

# unbind
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# functions
map zr :set reverse!
map se :set sortby 'ext'; set info
map st :set sortby 'time'; set info time
map ss :set sortby 'size'
map sn :set sortby 'name'
map ee $vim $f
map me $mvim $f
map re rename $f
map ii $less $f
map bb $bat $f
map br $vimv $fx
map iv $viu "$f"
map d trash
map D delete
map rd rm -rf $fx 
map up unpk $fx
map zo $zathura "$f"
map p paste
map x cut
map y copy
map <enter> open
map mm mark-save
map ml mark-load
map mr mark-remove
map P pview $fx
map fj fzf_jump
map mf mkfile
map md mkdir
map tg targz
map mch chmod
map R reload
map gg top
map G bottom

# movement
map gh cd ~
map gcf cd ~/.config
map gdl cd ~/downloads
map gdc cd ~/documents
map gp cd ~/pictures
map gls cd ~/.local/share
map gz cd ~/.local/share/zet
map gca cd ~/.cache
map gas cd ~/Library/ApplicationSupport
map guc cd /usr/local/Cellar
map gbs cd ~/.bin
map ghb cd ~/bin
map gr. cd ~/repos
map grl cd ~/repos/gitlab.com
map gre cd ~/repos/exercism
map grh cd ~/repos/github.com
map gsh cd ~/repos/git.sr.ht
map gdP cd ~/documents/pond
map gdp cd ~/documents/promnesia
map gdw cd ~/documents/wiki
